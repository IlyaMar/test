Ты ассистент разработчика, который создает новые роли и пермиссии в облаке.
В облаке определены сервисы, например iam, compute, mdb.

У сервиса заданы ресурс типы - это виды сущностей сервиса, например cloud, instance, disk, serviceAccount, database, image. Ресурс типы задаются в формате <сервис>.<ресурс>, например iam.serviceAccount, compute.image
На ресурсах можно поизводить действия, например - read, create, update, execute, stop, start, delete, admin.

Пермиссия определяет можно ли производить действие на ресурсе. Облако проверяет пермиссию перед исполнением действия.
Имя пермиссии задаётся по шаблону <сервис>.<ресурс тип>.<действие>. У пермиссии есть:
- ресурс тип
- категория. описывает род действия с ресурсом.
- видимость. private / public
- стейдж. обычно GA - пермиссия в общем доступе

Список категорий пермиссий:
 * READ_CONTROL_PLANE читать метаданные и настройки ресурса
 * READ_DATA_PLANE читать данные ресурса
 * DELETE удалять ресурсы
 * CREATE создавать ресурсы
 * UPDATE модифицировать ресурс
 * USE_DATA_PLANE читать и писать данные ресурса, включая пользовательские данные
 * USE_CONTROL_PLANE конфигурировать ресурс
 * START запускать ресурс
 * STOP останавливать ресурс


Примеры пермиссий:

для сервиса example ресурс типа example.child и действия get. Категория READ_DATA_PLANE потому что читаются данные ресурса:
permissions:
  example.children.get:
    description: Returns a child entity
    category: READ_DATA_PLANE
    stage: GA
    visibility: internal
    resourceType: example.child

для листинга пользователей в облаке iam. Категория READ_CONTROL_PLANE потому что мы просто перечисляем ресурсы, их данные не читаем:
permissions:
  iam.cloudUsers.list:
    description: List users in a cloud
    category: READ_CONTROL_PLANE
    stage: GA
    visibility: public
    resourceType: resource-manager.cloud

для выпуска токена сервисного аккаунта iam. Категория USE_DATA_PLANE так выпуск токенов это работа с данными ресурса
permissions:
  iam.serviceAccounts.issueToken:
    description: ''
    category: USE_DATA_PLANE
    stage: GA
    visibility: public
    resourceType: iam.serviceAccount


Задание: определи категорию данной пермиссии:
permissions:
  iam.folders.list:
    description: List folders in a cloud
    category: ?
    stage: GA
    visibility: public
    resourceType: resource-manager.folder

  iam.oauthClients.get:
    description: Get OAuth clients
    #   added to restrictions: freeTier;
    category: ?
    stage: GA
    visibility: public
    resourceType: iam.oauthClient

  iam.oauthClients.create:
    description: Create OAuth clients
    #   added to restrictions: freeTier;
    category: ?
    stage: GA
    visibility: public
    resourceType: resource-manager.folder

  iam.oauthClients.update:
    description: Update OAuth clients
    #   added to restrictions: freeTier;
    category: ?
    stage: GA
    visibility: public
    resourceType: iam.oauthClient





Роль это объединение несколько пермиссий, которое можно выдать пользователю.
Имя роли задаются по шаблону <сервис>.<ресурс>.<название актора>.

Примеры ролей:
для создания токенов сервис-аккаунта iam:
roles:
  iam.serviceAccounts.tokenCreator:
    groups: [iam, iam.serviceAccount]
    name: Роль для получения токена сервис-аккаунта, на который она назначена
    visibility: public
    description: ''
    scopes:
      - yc.iam.serviceAccounts.issueToken

для администрирования OS logins в iam:
  internal.iam.osLogins.admin:
    groups: [iam]
    name: (Внутренняя) Администрирование OS logins пользователей
    visibility: internal
    description: Просмотр и редактирование OS logins пользователей
    permissions:
      - iam.subjects.getOsLogin
      - iam.subjects.updateOsLogin


Пермиссии описывай отдельно, роли - отдельно. Роли могут включать в себя пермисиии и другие роли.

Создай роль и пермиссии в формате yaml по данному примеру



